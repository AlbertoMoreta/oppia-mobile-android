apply plugin: 'com.android.application'

repositories {
    maven {
        url "https://mint.splunk.com/gradle/"
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "org.digitalcampus.mobile.learning"
        minSdkVersion 14
        targetSdkVersion 23

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'README.md'
    }

    lintOptions {
        checkReleaseBuilds true
        // Disable checks for String translations
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    apply plugin: 'com.google.gms.google-services'
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'joda-time:joda-time:2.3'
    compile 'com.android.support:design:23.3.0'
    compile "com.androidplot:androidplot-core:0.6.1"
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    compile "com.splunk.mint:mint:5.0.0"
    compile "com.google.android.gms:play-services-gcm:8.1.0"

    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.squareup.okhttp3:mockwebserver:3.3.1'
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'com.android.support.test:rules:0.4'
    androidTestCompile 'com.android.support:support-annotations:23.3.0'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    compile 'com.squareup.okhttp3:mockwebserver:3.3.1'
}

android.applicationVariants.all {variant ->
    def applicationId = variant.applicationId
    def adb = android.adbExe as String
    def variantName = variant.name.capitalize()

    def grantPermissionsTask = tasks.create("grant${variantName}Permissions") << {
        "${adb} devices".execute().text.eachLine {
            if(it.endsWith("device")) {
                def device = it.split()[0]
                println "Granting permissions on device ${device}"
                "${adb} -s ${device} shell pm grant ${applicationId} android.permission.READ_PHONE_STATE".execute()
            }
        }
    }
    grantPermissionsTask.description = "Grants permissions on Marshmallow"
    grantPermissionsTask.group = "extras"
}
